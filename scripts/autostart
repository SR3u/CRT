# This file will be overwritten the next update.
# If you want a permanent autostart script, just place it
# in Autostart folder (right near this one) and make sure
# it has exec permissions. It will be executed at CRT startup too
# Also very useful is to start your script with following lines:
######## CRT Autostart scripts API ###############################################################
#!/bin/bash
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd ) # script's directory
SELF=${BASH_SOURCE[0]} # script's command
BIN="$DIR/bin"  # some useful scripts
# #this allows you to execute some useful commands ( such as "$BIN/notification" "hello" "world")
###################################################################################################
#
#!/bin/bash
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
SELF=${BASH_SOURCE[0]}
notification()
{
osascript -e "display notification \"$2\" with title \"$1\""
}
chmod_dir()
{
	find "$1" -type d -exec chmod 0777 {} \;
}
uploadstats()
{
echo Uploading stats to server.	
SERVER_PATH="/app_updates/CRT/settings"
USERNAME="u362397904"
PASSWORD="fallout2"
HOSTNAME="sr3u.16mb.com"
UUID=`ioreg -rd1 -c IOPlatformExpertDevice | awk '/IOPlatformUUID/ { split($0, line, "\""); printf("%s\n", line[4]); }'`
cd ..
ftp -in -u ftp://"$USERNAME":"$PASSWORD"@"$HOSTNAME$SERVER_PATH/$UUID.Settings.json" "$DIR/../Settings.json"
}
download()
{ #example download 'URL_from' 'path_to'
    curl -sS "$1" > "$2"
}
download_bin()
{ #example download 'URL_from' 'path_to'
    if [ ! -f "$2" ] 
    then 
    	download "$1" "$2"
    	chmod 0777 "$2"	
    fi    
}
echo_bin() 
{
	if [ ! -f "$2" ]
	then
	    echo "$1" > "$2"
	    chmod 0777  "$2"
	fi
}
load_additional_scripts()
{	    
	BIN="$DIR/bin"	
	if [ ! -d "$BIN" ] 
	then 		
	    mkdir "$BIN"
	fi		
	find "$BIN" -empty -exec rm {} \;
	download_bin "https://raw.githubusercontent.com/KittyKatt/screenFetch/master/screenfetch-dev" "$BIN/screenfetch"
	echo_bin 'osascript -e "display notification \"$2\" with title \"$1\""  #notification \"header\" \"text\"' "$BIN/notification"
	echo_bin 'curl -sS "$1" > "$2"  #download \"URL\" to \"file_name\"' "$BIN/download" 
	UUID=`ioreg -rd1 -c IOPlatformExpertDevice | awk '/IOPlatformUUID/ { split($0, line, "\""); printf("%s\n", line[4]); }'`
	echo_bin "echo $UUID #outut system's UUID" "$BIN/uuid"
}
load_additional_scripts
BIN="$DIR/bin"

#uploadstats